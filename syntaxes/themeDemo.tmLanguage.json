{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Theme Demo Language",
	"patterns": [
		{
			"name": "comment.tdm",
			"match": "comment(\n|\r)"
		},
		{
			"name": "comment.line.tdm",
			"match": "comment.line(\n|\r)"
		},
		{
			"name": "comment.line.double-slash.tdm",
			"match": "comment.line.double-slash(\n|\r)"
		},
		{
			"name": "comment.line.double-dash.tdm",
			"match": "comment.line.double-dash(\n|\r)"
		},
		{
			"name": "comment.line.number-sign.tdm",
			"match": "comment.line.number-sign(\n|\r)"
		},
		{
			"name": "comment.line.percentage.tdm",
			"match": "comment.line.percentage(\n|\r)"
		},
		{
			"name": "comment.line.character.tdm",
			"match": "comment.line.character(\n|\r)"
		},
		{
			"name": "comment.block.tdm",
			"match": "comment.block(\n|\r)"
		},
		{
			"name": "comment.block.documentation.tdm",
			"match": "comment.block.documentation(\n|\r)"
		},
		{
			"name": "constant.tdm",
			"match": "constant(\n|\r)"
		},
		{
			"name": "constant.numeric.tdm",
			"match": "constant.numeric(\n|\r)"
		},
		{
			"name": "constant.character.tdm",
			"match": "constant.character(\n|\r)"
		},
		{
			"name": "constant.character.escape.tdm",
			"match": "constant.character.escape(\n|\r)"
		},
		{
			"name": "constant.language.tdm",
			"match": "constant.language(\n|\r)"
		},
		{
			"name": "constant.other.tdm",
			"match": "constant.other(\n|\r)"
		},
		{
			"name": "entity.tdm",
			"match": "entity(\n|\r)"
		},
		{
			"name": "entity.name.tdm",
			"match": "entity.name(\n|\r)"
		},
		{
			"name": "entity.name.function.tdm",
			"match": "entity.name.function(\n|\r)"
		},
		{
			"name": "entity.name.type.tdm",
			"match": "entity.name.type(\n|\r)"
		},
		{
			"name": "entity.name.tag.tdm",
			"match": "entity.name.tag(\n|\r)"
		},
		{
			"name": "entity.name.section.tdm",
			"match": "entity.name.section(\n|\r)"
		},
		{
			"name": "entity.other.tdm",
			"match": "entity.other(\n|\r)"
		},
		{
			"name": "entity.other.inherited-class.tdm",
			"match": "entity.other.inherited-class(\n|\r)"
		},
		{
			"name": "entity.other.attribute-name.tdm",
			"match": "entity.other.attribute-name(\n|\r)"
		},
		{
			"name": "invalid.tdm",
			"match": "invalid(\n|\r)"
		},
		{
			"name": "invalid.illegal.tdm",
			"match": "invalid.illegal(\n|\r)"
		},
		{
			"name": "invalid.deprecated.tdm",
			"match": "invalid.deprecated(\n|\r)"
		},
		{
			"name": "keyword.tdm",
			"match": "keyword(\n|\r)"
		},
		{
			"name": "keyword.control.tdm",
			"match": "keyword.control(\n|\r)"
		},
		{
			"name": "keyword.operator.tdm",
			"match": "keyword.operator(\n|\r)"
		},
		{
			"name": "keyword.other.tdm",
			"match": "keyword.other(\n|\r)"
		},
		{
			"name": "markup.tdm",
			"match": "markup(\n|\r)"
		},
		{
			"name": "markup.underline.tdm",
			"match": "markup.underline(\n|\r)"
		},
		{
			"name": "markup.underline.link.tdm",
			"match": "markup.underline.link(\n|\r)"
		},
		{
			"name": "markup.bold.tdm",
			"match": "markup.bold(\n|\r)"
		},
		{
			"name": "markup.heading.tdm",
			"match": "markup.heading(\n|\r)"
		},
		{
			"name": "markup.heading.0.tdm",
			"match": "markup.heading.0(\n|\r)"
		},
		{
			"name": "markup.heading.1.tdm",
			"match": "markup.heading.1(\n|\r)"
		},
		{
			"name": "markup.heading.2.tdm",
			"match": "markup.heading.2(\n|\r)"
		},
		{
			"name": "markup.heading.3.tdm",
			"match": "markup.heading.3(\n|\r)"
		},
		{
			"name": "markup.italic.tdm",
			"match": "markup.italic(\n|\r)"
		},
		{
			"name": "markup.list.tdm",
			"match": "markup.list(\n|\r)"
		},
		{
			"name": "markup.list.numbered.tdm",
			"match": "markup.list.numbered(\n|\r)"
		},
		{
			"name": "markup.list.unnumbered.tdm",
			"match": "markup.list.unnumbered(\n|\r)"
		},
		{
			"name": "markup.quote.tdm",
			"match": "markup.quote(\n|\r)"
		},
		{
			"name": "markup.raw.tdm",
			"match": "markup.raw(\n|\r)"
		},
		{
			"name": "markup.other.tdm",
			"match": "markup.other(\n|\r)"
		},
		{
			"name": "storage.tdm",
			"match": "storage(\n|\r)"
		},
		{
			"name": "storage.type.tdm",
			"match": "storage.type(\n|\r)"
		},
		{
			"name": "storage.modifier.tdm",
			"match": "storage.modifier(\n|\r)"
		},
		{
			"name": "string.tdm",
			"match": "string(\n|\r)"
		},
		{
			"name": "string.quoted.tdm",
			"match": "string.quoted(\n|\r)"
		},
		{
			"name": "string.quoted.single.tdm",
			"match": "string.quoted.single(\n|\r)"
		},
		{
			"name": "string.quoted.double.tdm",
			"match": "string.quoted.double(\n|\r)"
		},
		{
			"name": "string.quoted.triple.tdm",
			"match": "string.quoted.triple(\n|\r)"
		},
		{
			"name": "string.quoted.other.tdm",
			"match": "string.quoted.other(\n|\r)"
		},
		{
			"name": "string.unquoted.tdm",
			"match": "string.unquoted(\n|\r)"
		},
		{
			"name": "string.interpolated.tdm",
			"match": "string.interpolated(\n|\r)"
		},
		{
			"name": "string.regexp.tdm",
			"match": "string.regexp(\n|\r)"
		},
		{
			"name": "string.other.tdm",
			"match": "string.other(\n|\r)"
		},
		{
			"name": "support.tdm",
			"match": "support(\n|\r)"
		},
		{
			"name": "support.function.tdm",
			"match": "support.function(\n|\r)"
		},
		{
			"name": "support.class.tdm",
			"match": "support.class(\n|\r)"
		},
		{
			"name": "support.type.tdm",
			"match": "support.type(\n|\r)"
		},
		{
			"name": "support.constant.tdm",
			"match": "support.constant(\n|\r)"
		},
		{
			"name": "support.variable.tdm",
			"match": "support.variable(\n|\r)"
		},
		{
			"name": "support.other.tdm",
			"match": "support.other(\n|\r)"
		},
		{
			"name": "variable.tdm",
			"match": "variable(\n|\r)"
		},
		{
			"name": "variable.parameter.tdm",
			"match": "variable.parameter(\n|\r)"
		},
		{
			"name": "variable.language.tdm",
			"match": "variable.language(\n|\r)"
		},
		{
			"name": "variable.other.tdm",
			"match": "variable.other(\n|\r)"
		}
	],
	
	"scopeName": "source.tdm"
}
